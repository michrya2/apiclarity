// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/apiclarity/apiclarity/api/server/models"
)

// PutAuthorizationModelTraceTraceIDDenyOKCode is the HTTP code returned for type PutAuthorizationModelTraceTraceIDDenyOK
const PutAuthorizationModelTraceTraceIDDenyOKCode int = 200

/*PutAuthorizationModelTraceTraceIDDenyOK Success

swagger:response putAuthorizationModelTraceTraceIdDenyOK
*/
type PutAuthorizationModelTraceTraceIDDenyOK struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessResponse `json:"body,omitempty"`
}

// NewPutAuthorizationModelTraceTraceIDDenyOK creates PutAuthorizationModelTraceTraceIDDenyOK with default headers values
func NewPutAuthorizationModelTraceTraceIDDenyOK() *PutAuthorizationModelTraceTraceIDDenyOK {

	return &PutAuthorizationModelTraceTraceIDDenyOK{}
}

// WithPayload adds the payload to the put authorization model trace trace Id deny o k response
func (o *PutAuthorizationModelTraceTraceIDDenyOK) WithPayload(payload *models.SuccessResponse) *PutAuthorizationModelTraceTraceIDDenyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put authorization model trace trace Id deny o k response
func (o *PutAuthorizationModelTraceTraceIDDenyOK) SetPayload(payload *models.SuccessResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutAuthorizationModelTraceTraceIDDenyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutAuthorizationModelTraceTraceIDDenyDefault unknown error

swagger:response putAuthorizationModelTraceTraceIdDenyDefault
*/
type PutAuthorizationModelTraceTraceIDDenyDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewPutAuthorizationModelTraceTraceIDDenyDefault creates PutAuthorizationModelTraceTraceIDDenyDefault with default headers values
func NewPutAuthorizationModelTraceTraceIDDenyDefault(code int) *PutAuthorizationModelTraceTraceIDDenyDefault {
	if code <= 0 {
		code = 500
	}

	return &PutAuthorizationModelTraceTraceIDDenyDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put authorization model trace trace ID deny default response
func (o *PutAuthorizationModelTraceTraceIDDenyDefault) WithStatusCode(code int) *PutAuthorizationModelTraceTraceIDDenyDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put authorization model trace trace ID deny default response
func (o *PutAuthorizationModelTraceTraceIDDenyDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put authorization model trace trace ID deny default response
func (o *PutAuthorizationModelTraceTraceIDDenyDefault) WithPayload(payload *models.APIResponse) *PutAuthorizationModelTraceTraceIDDenyDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put authorization model trace trace ID deny default response
func (o *PutAuthorizationModelTraceTraceIDDenyDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutAuthorizationModelTraceTraceIDDenyDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
