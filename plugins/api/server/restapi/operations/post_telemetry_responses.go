// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/apiclarity/apiclarity/plugins/api/server/models"
)

// PostTelemetryOKCode is the HTTP code returned for type PostTelemetryOK
const PostTelemetryOKCode int = 200

/*PostTelemetryOK Success

swagger:response postTelemetryOK
*/
type PostTelemetryOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPostTelemetryOK creates PostTelemetryOK with default headers values
func NewPostTelemetryOK() *PostTelemetryOK {

	return &PostTelemetryOK{}
}

// WithPayload adds the payload to the post telemetry o k response
func (o *PostTelemetryOK) WithPayload(payload interface{}) *PostTelemetryOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post telemetry o k response
func (o *PostTelemetryOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTelemetryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*PostTelemetryDefault unknown error

swagger:response postTelemetryDefault
*/
type PostTelemetryDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewPostTelemetryDefault creates PostTelemetryDefault with default headers values
func NewPostTelemetryDefault(code int) *PostTelemetryDefault {
	if code <= 0 {
		code = 500
	}

	return &PostTelemetryDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post telemetry default response
func (o *PostTelemetryDefault) WithStatusCode(code int) *PostTelemetryDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post telemetry default response
func (o *PostTelemetryDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post telemetry default response
func (o *PostTelemetryDefault) WithPayload(payload *models.APIResponse) *PostTelemetryDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post telemetry default response
func (o *PostTelemetryDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTelemetryDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
